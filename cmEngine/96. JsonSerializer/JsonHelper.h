#pragma once

#define JSON_DATA_TYPE_NON_INTRUSIVE_ADL_SERIALIZER(Type, ...)   \
namespace nlohmann                                                     \
{                                                                      \
	template <>                                                        \
	struct adl_serializer<Type>                \
	{                                                                  \
	static void to_json(nlohmann::json& nlohmann_json_j, const Type& nlohmann_json_t) { NLOHMANN_JSON_EXPAND(NLOHMANN_JSON_PASTE(NLOHMANN_JSON_TO, __VA_ARGS__)) } \
	static void from_json(const nlohmann::json& nlohmann_json_j, Type& nlohmann_json_t) { NLOHMANN_JSON_EXPAND(NLOHMANN_JSON_PASTE(NLOHMANN_JSON_FROM, __VA_ARGS__)) }\
	};                                                                 \
}

#define JSON_SERIALIZE_ENUM(ENUM_TYPE, ...) \
	NLOHMANN_JSON_SERIALIZE_ENUM(ENUM_TYPE, {__VA_ARGS__})
#define ENUM_ENTRY(EnumValue, MappingValue) {EnumValue, MappingValue}

#define CUSTOM_TO_JSON(ClassName)\
	friend void to_json(nlohmann::json& inOutJson, const ClassName& inData)

#define CUSTOM_FROM_JSON(ClassName)\
	friend void from_json(const nlohmann::json& inJson, ClassName& inOutData)

#define CUSTOM_TO_JSON_NOT_INJECTION(ClassName)\
	inline void to_json(nlohmann::json& inOutJson, const ClassName& inData)

#define CUSTOM_FROM_JSON_NOT_INJECTION(ClassName)\
	inline void from_json(const nlohmann::json& inJson, ClassName& inOutData)

JSON_DATA_TYPE_NON_INTRUSIVE_ADL_SERIALIZER(ImVec4, x, y, z, w);
JSON_DATA_TYPE_NON_INTRUSIVE_ADL_SERIALIZER(Vector3, x, y, z);
JSON_DATA_TYPE_NON_INTRUSIVE_ADL_SERIALIZER(Vector4, x, y, z, w);
JSON_DATA_TYPE_NON_INTRUSIVE_ADL_SERIALIZER(Color, x, y, z, w);

JSON_SERIALIZE_ENUM(
	D3D11_INPUT_CLASSIFICATION,
	ENUM_ENTRY(D3D11_INPUT_PER_VERTEX_DATA, "D3D11_INPUT_PER_VERTEX_DATA"),
	ENUM_ENTRY(D3D11_INPUT_PER_INSTANCE_DATA, "D3D11_INPUT_PER_INSTANCE_DATA")
);

JSON_SERIALIZE_ENUM(DXGI_FORMAT,
	ENUM_ENTRY(DXGI_FORMAT_UNKNOWN, "DXGI_FORMAT_UNKNOWN"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32A32_TYPELESS, "DXGI_FORMAT_R32G32B32A32_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32A32_FLOAT, "DXGI_FORMAT_R32G32B32A32_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32A32_UINT, "DXGI_FORMAT_R32G32B32A32_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32A32_SINT, "DXGI_FORMAT_R32G32B32A32_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32_TYPELESS, "DXGI_FORMAT_R32G32B32_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32_FLOAT, "DXGI_FORMAT_R32G32B32_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32_UINT, "DXGI_FORMAT_R32G32B32_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32B32_SINT, "DXGI_FORMAT_R32G32B32_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_TYPELESS, "DXGI_FORMAT_R16G16B16A16_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_FLOAT, "DXGI_FORMAT_R16G16B16A16_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_UNORM, "DXGI_FORMAT_R16G16B16A16_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_UINT, "DXGI_FORMAT_R16G16B16A16_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_SNORM, "DXGI_FORMAT_R16G16B16A16_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16B16A16_SINT, "DXGI_FORMAT_R16G16B16A16_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32_TYPELESS, "DXGI_FORMAT_R32G32_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32_FLOAT, "DXGI_FORMAT_R32G32_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32_UINT, "DXGI_FORMAT_R32G32_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G32_SINT, "DXGI_FORMAT_R32G32_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32G8X24_TYPELESS, "DXGI_FORMAT_R32G8X24_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_D32_FLOAT_S8X24_UINT, "DXGI_FORMAT_D32_FLOAT_S8X24_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS, "DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_X32_TYPELESS_G8X24_UINT, "DXGI_FORMAT_X32_TYPELESS_G8X24_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R10G10B10A2_TYPELESS, "DXGI_FORMAT_R10G10B10A2_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R10G10B10A2_UNORM, "DXGI_FORMAT_R10G10B10A2_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R10G10B10A2_UINT, "DXGI_FORMAT_R10G10B10A2_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R11G11B10_FLOAT, "DXGI_FORMAT_R11G11B10_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_TYPELESS, "DXGI_FORMAT_R8G8B8A8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_UNORM, "DXGI_FORMAT_R8G8B8A8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_UNORM_SRGB, "DXGI_FORMAT_R8G8B8A8_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_UINT, "DXGI_FORMAT_R8G8B8A8_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_SNORM, "DXGI_FORMAT_R8G8B8A8_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8B8A8_SINT, "DXGI_FORMAT_R8G8B8A8_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_TYPELESS, "DXGI_FORMAT_R16G16_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_FLOAT, "DXGI_FORMAT_R16G16_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_UNORM, "DXGI_FORMAT_R16G16_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_UINT, "DXGI_FORMAT_R16G16_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_SNORM, "DXGI_FORMAT_R16G16_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16G16_SINT, "DXGI_FORMAT_R16G16_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32_TYPELESS, "DXGI_FORMAT_R32_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_D32_FLOAT, "DXGI_FORMAT_D32_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R32_FLOAT, "DXGI_FORMAT_R32_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_R32_UINT, "DXGI_FORMAT_R32_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R32_SINT, "DXGI_FORMAT_R32_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R24G8_TYPELESS, "DXGI_FORMAT_R24G8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_D24_UNORM_S8_UINT, "DXGI_FORMAT_D24_UNORM_S8_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R24_UNORM_X8_TYPELESS, "DXGI_FORMAT_R24_UNORM_X8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_X24_TYPELESS_G8_UINT, "DXGI_FORMAT_X24_TYPELESS_G8_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_TYPELESS, "DXGI_FORMAT_R8G8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_UNORM, "DXGI_FORMAT_R8G8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_UINT, "DXGI_FORMAT_R8G8_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_SNORM, "DXGI_FORMAT_R8G8_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_SINT, "DXGI_FORMAT_R8G8_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16_TYPELESS, "DXGI_FORMAT_R16_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R16_FLOAT, "DXGI_FORMAT_R16_FLOAT"),
	ENUM_ENTRY(DXGI_FORMAT_D16_UNORM, "DXGI_FORMAT_D16_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16_UNORM, "DXGI_FORMAT_R16_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16_UINT, "DXGI_FORMAT_R16_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R16_SNORM, "DXGI_FORMAT_R16_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R16_SINT, "DXGI_FORMAT_R16_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_R8_TYPELESS, "DXGI_FORMAT_R8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_R8_UNORM, "DXGI_FORMAT_R8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8_UINT, "DXGI_FORMAT_R8_UINT"),
	ENUM_ENTRY(DXGI_FORMAT_R8_SNORM, "DXGI_FORMAT_R8_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R8_SINT, "DXGI_FORMAT_R8_SINT"),
	ENUM_ENTRY(DXGI_FORMAT_A8_UNORM, "DXGI_FORMAT_A8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R1_UNORM, "DXGI_FORMAT_R1_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R9G9B9E5_SHAREDEXP, "DXGI_FORMAT_R9G9B9E5_SHAREDEXP"),
	ENUM_ENTRY(DXGI_FORMAT_R8G8_B8G8_UNORM, "DXGI_FORMAT_R8G8_B8G8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_G8R8_G8B8_UNORM, "DXGI_FORMAT_G8R8_G8B8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC1_TYPELESS, "DXGI_FORMAT_BC1_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC1_UNORM, "DXGI_FORMAT_BC1_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC1_UNORM_SRGB, "DXGI_FORMAT_BC1_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_BC2_TYPELESS, "DXGI_FORMAT_BC2_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC2_UNORM, "DXGI_FORMAT_BC2_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC2_UNORM_SRGB, "DXGI_FORMAT_BC2_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_BC3_TYPELESS, "DXGI_FORMAT_BC3_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC3_UNORM, "DXGI_FORMAT_BC3_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC3_UNORM_SRGB, "DXGI_FORMAT_BC3_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_BC4_TYPELESS, "DXGI_FORMAT_BC4_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC4_UNORM, "DXGI_FORMAT_BC4_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC4_SNORM, "DXGI_FORMAT_BC4_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC5_TYPELESS, "DXGI_FORMAT_BC5_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC5_UNORM, "DXGI_FORMAT_BC5_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC5_SNORM, "DXGI_FORMAT_BC5_SNORM"),
	ENUM_ENTRY(DXGI_FORMAT_B5G6R5_UNORM, "DXGI_FORMAT_B5G6R5_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_B5G5R5A1_UNORM, "DXGI_FORMAT_B5G5R5A1_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8A8_UNORM, "DXGI_FORMAT_B8G8R8A8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8X8_UNORM, "DXGI_FORMAT_B8G8R8X8_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM, "DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8A8_TYPELESS, "DXGI_FORMAT_B8G8R8A8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8A8_UNORM_SRGB, "DXGI_FORMAT_B8G8R8A8_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8X8_TYPELESS, "DXGI_FORMAT_B8G8R8X8_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_B8G8R8X8_UNORM_SRGB, "DXGI_FORMAT_B8G8R8X8_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_BC6H_TYPELESS, "DXGI_FORMAT_BC6H_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC6H_UF16, "DXGI_FORMAT_BC6H_UF16"),
	ENUM_ENTRY(DXGI_FORMAT_BC6H_SF16, "DXGI_FORMAT_BC6H_SF16"),
	ENUM_ENTRY(DXGI_FORMAT_BC7_TYPELESS, "DXGI_FORMAT_BC7_TYPELESS"),
	ENUM_ENTRY(DXGI_FORMAT_BC7_UNORM, "DXGI_FORMAT_BC7_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_BC7_UNORM_SRGB, "DXGI_FORMAT_BC7_UNORM_SRGB"),
	ENUM_ENTRY(DXGI_FORMAT_AYUV, "DXGI_FORMAT_AYUV"),
	ENUM_ENTRY(DXGI_FORMAT_Y410, "DXGI_FORMAT_Y410"),
	ENUM_ENTRY(DXGI_FORMAT_Y416, "DXGI_FORMAT_Y416"),
	ENUM_ENTRY(DXGI_FORMAT_NV12, "DXGI_FORMAT_NV12"),
	ENUM_ENTRY(DXGI_FORMAT_P010, "DXGI_FORMAT_P010"),
	ENUM_ENTRY(DXGI_FORMAT_P016, "DXGI_FORMAT_P016"),
	ENUM_ENTRY(DXGI_FORMAT_420_OPAQUE, "DXGI_FORMAT_420_OPAQUE"),
	ENUM_ENTRY(DXGI_FORMAT_YUY2, "DXGI_FORMAT_YUY2"),
	ENUM_ENTRY(DXGI_FORMAT_Y210, "DXGI_FORMAT_Y210"),
	ENUM_ENTRY(DXGI_FORMAT_Y216, "DXGI_FORMAT_Y216"),
	ENUM_ENTRY(DXGI_FORMAT_NV11, "DXGI_FORMAT_NV11"),
	ENUM_ENTRY(DXGI_FORMAT_AI44, "DXGI_FORMAT_AI44"),
	ENUM_ENTRY(DXGI_FORMAT_IA44, "DXGI_FORMAT_IA44"),
	ENUM_ENTRY(DXGI_FORMAT_P8, "DXGI_FORMAT_P8"),
	ENUM_ENTRY(DXGI_FORMAT_A8P8, "DXGI_FORMAT_A8P8"),
	ENUM_ENTRY(DXGI_FORMAT_B4G4R4A4_UNORM, "DXGI_FORMAT_B4G4R4A4_UNORM"),
	ENUM_ENTRY(DXGI_FORMAT_P208, "DXGI_FORMAT_P208"),
	ENUM_ENTRY(DXGI_FORMAT_V208, "DXGI_FORMAT_V208"),
	ENUM_ENTRY(DXGI_FORMAT_V408, "DXGI_FORMAT_V408"),
	ENUM_ENTRY(DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE, "DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE"),
	ENUM_ENTRY(DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE, "DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE"),
	ENUM_ENTRY(DXGI_FORMAT_FORCE_UINT, "DXGI_FORMAT_FORCE_UINT")
);

CUSTOM_FROM_JSON_NOT_INJECTION(D3D11_INPUT_ELEMENT_DESC)
{
	std::string str = inJson["SemanticName"];
	inOutData.SemanticName = str.c_str();
	inOutData.SemanticIndex = inJson["SemanticIndex"];
	inOutData.Format = inJson["Format"];
	inOutData.InputSlot = inJson["InputSlot"];
	inOutData.AlignedByteOffset = inJson["AlignedByteOffset"];
	inOutData.InputSlotClass = inJson["InputSlotClass"];
	inOutData.InstanceDataStepRate = inJson["InstanceDataStepRate"];
}

CUSTOM_TO_JSON_NOT_INJECTION(D3D11_INPUT_ELEMENT_DESC)
{
	inOutJson["SemanticName"] = inData.SemanticName;
	inOutJson["SemanticIndex"] = inData.SemanticIndex;
	inOutJson["Format"] = inData.Format;
	inOutJson["InputSlot"] = inData.InputSlot;
	inOutJson["AlignedByteOffset"] = inData.AlignedByteOffset;
	inOutJson["InputSlotClass"] = inData.InputSlotClass;
	inOutJson["InstanceDataStepRate"] = inData.InstanceDataStepRate;
}